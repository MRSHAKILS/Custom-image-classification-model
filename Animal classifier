{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":12252963,"sourceType":"datasetVersion","datasetId":7720462}],"dockerImageVersionId":31041,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-06-23T19:58:37.133335Z","iopub.execute_input":"2025-06-23T19:58:37.133932Z","iopub.status.idle":"2025-06-23T19:58:37.703169Z","shell.execute_reply.started":"2025-06-23T19:58:37.133908Z","shell.execute_reply":"2025-06-23T19:58:37.702578Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/animal-dataset/lamb/goat  (40).jpg\n/kaggle/input/animal-dataset/lamb/goat  (27).jpg\n/kaggle/input/animal-dataset/lamb/goat  (49).jpg\n/kaggle/input/animal-dataset/lamb/goat  (103).jpg\n/kaggle/input/animal-dataset/lamb/goat  (60).jpg\n/kaggle/input/animal-dataset/lamb/goat  (88).jpg\n/kaggle/input/animal-dataset/lamb/goat  (13).jpg\n/kaggle/input/animal-dataset/lamb/goat  (9).jpg\n/kaggle/input/animal-dataset/lamb/goat  (17).jpg\n/kaggle/input/animal-dataset/lamb/goat  (10).jpg\n/kaggle/input/animal-dataset/lamb/goat  (12).jpg\n/kaggle/input/animal-dataset/lamb/goat  (38).jpg\n/kaggle/input/animal-dataset/lamb/goat  (14).jpg\n/kaggle/input/animal-dataset/lamb/goat  (89).jpg\n/kaggle/input/animal-dataset/lamb/goat  (54).jpg\n/kaggle/input/animal-dataset/lamb/goat  (56).jpg\n/kaggle/input/animal-dataset/lamb/goat  (62).jpg\n/kaggle/input/animal-dataset/lamb/goat  (106).jpg\n/kaggle/input/animal-dataset/lamb/goat  (46).jpg\n/kaggle/input/animal-dataset/lamb/goat  (29).jpg\n/kaggle/input/animal-dataset/lamb/goat  (51).jpg\n/kaggle/input/animal-dataset/lamb/goat  (52).jpg\n/kaggle/input/animal-dataset/lamb/goat  (95).jpg\n/kaggle/input/animal-dataset/lamb/goat  (43).jpg\n/kaggle/input/animal-dataset/lamb/goat  (48).jpg\n/kaggle/input/animal-dataset/lamb/goat  (78).jpg\n/kaggle/input/animal-dataset/lamb/goat  (81).jpg\n/kaggle/input/animal-dataset/lamb/goat  (79).jpg\n/kaggle/input/animal-dataset/lamb/goat  (32).jpg\n/kaggle/input/animal-dataset/lamb/goat  (105).jpg\n/kaggle/input/animal-dataset/lamb/goat  (92).jpg\n/kaggle/input/animal-dataset/lamb/goat  (57).jpg\n/kaggle/input/animal-dataset/lamb/goat  (42).jpg\n/kaggle/input/animal-dataset/lamb/goat  (7).jpg\n/kaggle/input/animal-dataset/lamb/goat  (47).jpg\n/kaggle/input/animal-dataset/lamb/goat  (104).jpg\n/kaggle/input/animal-dataset/lamb/goat  (41).jpg\n/kaggle/input/animal-dataset/lamb/goat  (107).jpg\n/kaggle/input/animal-dataset/lamb/goat  (101).jpg\n/kaggle/input/animal-dataset/lamb/goat  (99).jpg\n/kaggle/input/animal-dataset/lamb/goat  (82).jpg\n/kaggle/input/animal-dataset/lamb/goat  (70).jpg\n/kaggle/input/animal-dataset/lamb/goat  (25).jpg\n/kaggle/input/animal-dataset/lamb/goat  (67).jpg\n/kaggle/input/animal-dataset/lamb/goat  (50).jpg\n/kaggle/input/animal-dataset/lamb/goat  (83).jpg\n/kaggle/input/animal-dataset/lamb/goat  (69).jpg\n/kaggle/input/animal-dataset/lamb/goat  (87).jpg\n/kaggle/input/animal-dataset/lamb/goat  (2).jpg\n/kaggle/input/animal-dataset/lamb/goat  (80).jpg\n/kaggle/input/animal-dataset/lamb/goat  (26).jpg\n/kaggle/input/animal-dataset/lamb/goat  (100).jpg\n/kaggle/input/animal-dataset/lamb/goat  (19).jpg\n/kaggle/input/animal-dataset/lamb/goat  (18).jpg\n/kaggle/input/animal-dataset/lamb/goat  (72).jpg\n/kaggle/input/animal-dataset/lamb/goat  (1).jpg\n/kaggle/input/animal-dataset/lamb/goat  (58).jpg\n/kaggle/input/animal-dataset/lamb/goat  (74).jpg\n/kaggle/input/animal-dataset/lamb/goat  (86).jpg\n/kaggle/input/animal-dataset/lamb/goat  (90).jpg\n/kaggle/input/animal-dataset/lamb/goat  (28).jpg\n/kaggle/input/animal-dataset/lamb/goat  (39).jpg\n/kaggle/input/animal-dataset/lamb/goat  (44).jpg\n/kaggle/input/animal-dataset/lamb/goat  (64).jpg\n/kaggle/input/animal-dataset/lamb/goat  (23).jpg\n/kaggle/input/animal-dataset/lamb/goat  (37).jpg\n/kaggle/input/animal-dataset/lamb/goat  (31).jpg\n/kaggle/input/animal-dataset/lamb/goat  (20).jpg\n/kaggle/input/animal-dataset/lamb/goat  (85).jpg\n/kaggle/input/animal-dataset/lamb/goat  (75).jpg\n/kaggle/input/animal-dataset/lamb/goat  (68).jpg\n/kaggle/input/animal-dataset/lamb/goat  (21).jpg\n/kaggle/input/animal-dataset/lamb/goat  (22).jpg\n/kaggle/input/animal-dataset/lamb/goat  (4).jpg\n/kaggle/input/animal-dataset/lamb/goat  (93).jpg\n/kaggle/input/animal-dataset/lamb/goat  (71).jpg\n/kaggle/input/animal-dataset/lamb/goat  (33).jpg\n/kaggle/input/animal-dataset/lamb/goat  (77).jpg\n/kaggle/input/animal-dataset/lamb/goat  (84).jpg\n/kaggle/input/animal-dataset/lamb/goat  (102).jpg\n/kaggle/input/animal-dataset/lamb/goat  (3).jpg\n/kaggle/input/animal-dataset/lamb/goat  (35).jpg\n/kaggle/input/animal-dataset/lamb/goat  (11).jpg\n/kaggle/input/animal-dataset/lamb/goat  (5).jpg\n/kaggle/input/animal-dataset/lamb/goat  (30).jpg\n/kaggle/input/animal-dataset/lamb/goat  (45).jpg\n/kaggle/input/animal-dataset/lamb/goat  (59).jpg\n/kaggle/input/animal-dataset/lamb/goat  (36).jpg\n/kaggle/input/animal-dataset/lamb/goat  (15).jpg\n/kaggle/input/animal-dataset/lamb/goat  (65).jpg\n/kaggle/input/animal-dataset/lamb/goat  (61).jpg\n/kaggle/input/animal-dataset/lamb/goat  (8).jpg\n/kaggle/input/animal-dataset/lamb/goat  (24).jpg\n/kaggle/input/animal-dataset/lamb/goat  (16).jpg\n/kaggle/input/animal-dataset/lamb/goat  (96).jpg\n/kaggle/input/animal-dataset/lamb/goat  (97).jpg\n/kaggle/input/animal-dataset/lamb/goat  (94).jpg\n/kaggle/input/animal-dataset/lamb/goat  (76).jpg\n/kaggle/input/animal-dataset/lamb/goat  (55).jpg\n/kaggle/input/animal-dataset/lamb/goat  (66).jpg\n/kaggle/input/animal-dataset/lamb/goat  (98).jpg\n/kaggle/input/animal-dataset/lamb/goat  (63).jpg\n/kaggle/input/animal-dataset/lamb/goat  (91).jpg\n/kaggle/input/animal-dataset/lamb/goat  (34).jpg\n/kaggle/input/animal-dataset/lamb/goat  (53).jpg\n/kaggle/input/animal-dataset/lamb/goat  (73).jpg\n/kaggle/input/animal-dataset/lamb/goat  (6).jpg\n/kaggle/input/animal-dataset/dog/Dog  (87).jpg\n/kaggle/input/animal-dataset/dog/Dog  (53).jpg\n/kaggle/input/animal-dataset/dog/Dog  (2).jpg\n/kaggle/input/animal-dataset/dog/Dog  (18).jpg\n/kaggle/input/animal-dataset/dog/Dog  (14).jpg\n/kaggle/input/animal-dataset/dog/Dog  (71).jpg\n/kaggle/input/animal-dataset/dog/Dog  (50).jpg\n/kaggle/input/animal-dataset/dog/Dog  (102).jpg\n/kaggle/input/animal-dataset/dog/Dog  (79).jpg\n/kaggle/input/animal-dataset/dog/Dog  (59).jpg\n/kaggle/input/animal-dataset/dog/Dog  (38).jpg\n/kaggle/input/animal-dataset/dog/Dog  (40).jpg\n/kaggle/input/animal-dataset/dog/Dog  (6).jpg\n/kaggle/input/animal-dataset/dog/Dog  (7).jpg\n/kaggle/input/animal-dataset/dog/Dog  (94).jpg\n/kaggle/input/animal-dataset/dog/Dog  (104).jpg\n/kaggle/input/animal-dataset/dog/Dog  (27).jpg\n/kaggle/input/animal-dataset/dog/Dog  (45).jpg\n/kaggle/input/animal-dataset/dog/Dog  (16).jpg\n/kaggle/input/animal-dataset/dog/Dog  (74).jpg\n/kaggle/input/animal-dataset/dog/Dog  (70).jpg\n/kaggle/input/animal-dataset/dog/Dog  (68).jpg\n/kaggle/input/animal-dataset/dog/Dog  (99).jpg\n/kaggle/input/animal-dataset/dog/Dog  (83).jpg\n/kaggle/input/animal-dataset/dog/Dog  (78).jpg\n/kaggle/input/animal-dataset/dog/Dog  (15).jpg\n/kaggle/input/animal-dataset/dog/Dog  (44).jpg\n/kaggle/input/animal-dataset/dog/Dog  (73).jpg\n/kaggle/input/animal-dataset/dog/Dog  (29).jpg\n/kaggle/input/animal-dataset/dog/Dog  (32).jpg\n/kaggle/input/animal-dataset/dog/Dog  (5).jpg\n/kaggle/input/animal-dataset/dog/Dog  (20).jpg\n/kaggle/input/animal-dataset/dog/Dog  (75).jpg\n/kaggle/input/animal-dataset/dog/Dog  (8).jpg\n/kaggle/input/animal-dataset/dog/Dog  (67).jpg\n/kaggle/input/animal-dataset/dog/Dog  (96).jpg\n/kaggle/input/animal-dataset/dog/Dog  (48).jpg\n/kaggle/input/animal-dataset/dog/Dog  (65).jpg\n/kaggle/input/animal-dataset/dog/Dog  (41).jpg\n/kaggle/input/animal-dataset/dog/Dog  (36).jpg\n/kaggle/input/animal-dataset/dog/Dog  (35).jpg\n/kaggle/input/animal-dataset/dog/Dog  (60).jpg\n/kaggle/input/animal-dataset/dog/Dog  (19).jpg\n/kaggle/input/animal-dataset/dog/Dog  (101).jpg\n/kaggle/input/animal-dataset/dog/Dog  (103).jpg\n/kaggle/input/animal-dataset/dog/Dog  (4).jpg\n/kaggle/input/animal-dataset/dog/Dog  (33).jpg\n/kaggle/input/animal-dataset/dog/Dog  (12).jpg\n/kaggle/input/animal-dataset/dog/Dog  (63).jpg\n/kaggle/input/animal-dataset/dog/Dog  (105).jpg\n/kaggle/input/animal-dataset/dog/Dog  (61).jpg\n/kaggle/input/animal-dataset/dog/Dog  (66).jpg\n/kaggle/input/animal-dataset/dog/Dog  (46).jpg\n/kaggle/input/animal-dataset/dog/Dog  (3).jpg\n/kaggle/input/animal-dataset/dog/Dog  (81).jpg\n/kaggle/input/animal-dataset/dog/Dog  (93).jpg\n/kaggle/input/animal-dataset/dog/Dog  (76).jpg\n/kaggle/input/animal-dataset/dog/Dog  (69).jpg\n/kaggle/input/animal-dataset/dog/Dog  (95).jpg\n/kaggle/input/animal-dataset/dog/Dog  (82).jpg\n/kaggle/input/animal-dataset/dog/Dog  (89).jpg\n/kaggle/input/animal-dataset/dog/Dog  (17).jpg\n/kaggle/input/animal-dataset/dog/Dog  (51).jpg\n/kaggle/input/animal-dataset/dog/Dog  (88).jpg\n/kaggle/input/animal-dataset/dog/Dog  (9).jpg\n/kaggle/input/animal-dataset/dog/Dog  (100).jpg\n/kaggle/input/animal-dataset/dog/Dog  (22).jpg\n/kaggle/input/animal-dataset/dog/Dog  (92).jpg\n/kaggle/input/animal-dataset/dog/Dog  (25).jpg\n/kaggle/input/animal-dataset/dog/Dog  (23).jpg\n/kaggle/input/animal-dataset/dog/Dog  (58).jpg\n/kaggle/input/animal-dataset/dog/Dog  (57).jpg\n/kaggle/input/animal-dataset/dog/Dog  (34).jpg\n/kaggle/input/animal-dataset/dog/Dog  (85).jpg\n/kaggle/input/animal-dataset/dog/Dog  (11).jpg\n/kaggle/input/animal-dataset/dog/Dog  (55).jpg\n/kaggle/input/animal-dataset/dog/Dog  (39).jpg\n/kaggle/input/animal-dataset/dog/Dog  (26).jpg\n/kaggle/input/animal-dataset/dog/Dog  (24).jpg\n/kaggle/input/animal-dataset/dog/Dog  (98).jpg\n/kaggle/input/animal-dataset/dog/Dog  (97).jpg\n/kaggle/input/animal-dataset/dog/Dog  (37).jpg\n/kaggle/input/animal-dataset/dog/Dog  (86).jpg\n/kaggle/input/animal-dataset/dog/Dog  (72).jpg\n/kaggle/input/animal-dataset/dog/Dog  (62).jpg\n/kaggle/input/animal-dataset/dog/Dog  (1).jpg\n/kaggle/input/animal-dataset/dog/Dog  (77).jpg\n/kaggle/input/animal-dataset/dog/Dog  (30).jpg\n/kaggle/input/animal-dataset/dog/Dog  (42).jpg\n/kaggle/input/animal-dataset/dog/Dog  (56).jpg\n/kaggle/input/animal-dataset/dog/Dog  (84).jpg\n/kaggle/input/animal-dataset/dog/Dog  (10).jpg\n/kaggle/input/animal-dataset/dog/Dog  (80).jpg\n/kaggle/input/animal-dataset/dog/Dog  (90).jpg\n/kaggle/input/animal-dataset/dog/Dog  (47).jpg\n/kaggle/input/animal-dataset/dog/Dog  (13).jpg\n/kaggle/input/animal-dataset/dog/Dog  (52).jpg\n/kaggle/input/animal-dataset/dog/Dog  (49).jpg\n/kaggle/input/animal-dataset/dog/Dog  (28).jpg\n/kaggle/input/animal-dataset/dog/Dog  (64).jpg\n/kaggle/input/animal-dataset/dog/Dog  (31).jpg\n/kaggle/input/animal-dataset/dog/Dog  (21).jpg\n/kaggle/input/animal-dataset/dog/Dog  (54).jpg\n/kaggle/input/animal-dataset/dog/Dog  (43).jpg\n/kaggle/input/animal-dataset/dog/Dog  (91).jpg\n/kaggle/input/animal-dataset/zebra/zebra (75).jpg\n/kaggle/input/animal-dataset/zebra/zebra (4).jpeg\n/kaggle/input/animal-dataset/zebra/zebra (7).jpg\n/kaggle/input/animal-dataset/zebra/zebra (62).jpg\n/kaggle/input/animal-dataset/zebra/zebra (2).jpeg\n/kaggle/input/animal-dataset/zebra/zebra (3).jpeg\n/kaggle/input/animal-dataset/zebra/zebra (27).jpg\n/kaggle/input/animal-dataset/zebra/zebra (28).jpg\n/kaggle/input/animal-dataset/zebra/zebra (39).jpg\n/kaggle/input/animal-dataset/zebra/zebra (82).jpg\n/kaggle/input/animal-dataset/zebra/zebra (45).jpg\n/kaggle/input/animal-dataset/zebra/zebra (79).jpg\n/kaggle/input/animal-dataset/zebra/zebra (87).jpg\n/kaggle/input/animal-dataset/zebra/zebra (84).jpg\n/kaggle/input/animal-dataset/zebra/zebra (66).jpg\n/kaggle/input/animal-dataset/zebra/zebra (15).jpg\n/kaggle/input/animal-dataset/zebra/zebra (54).jpg\n/kaggle/input/animal-dataset/zebra/zebra (3).jpg\n/kaggle/input/animal-dataset/zebra/zebra (69).jpg\n/kaggle/input/animal-dataset/zebra/zebra (14).jpg\n/kaggle/input/animal-dataset/zebra/zebra (22).jpg\n/kaggle/input/animal-dataset/zebra/zebra (24).jpg\n/kaggle/input/animal-dataset/zebra/zebra (41).jpg\n/kaggle/input/animal-dataset/zebra/zebra (52).jpg\n/kaggle/input/animal-dataset/zebra/zebra (55).jpg\n/kaggle/input/animal-dataset/zebra/zebra (102).jpg\n/kaggle/input/animal-dataset/zebra/zebra (32).jpg\n/kaggle/input/animal-dataset/zebra/zebra (63).jpg\n/kaggle/input/animal-dataset/zebra/zebra (50).jpg\n/kaggle/input/animal-dataset/zebra/zebra (56).jpg\n/kaggle/input/animal-dataset/zebra/zebra (12).jpg\n/kaggle/input/animal-dataset/zebra/zebra (86).jpg\n/kaggle/input/animal-dataset/zebra/zebra (1).jpeg\n/kaggle/input/animal-dataset/zebra/zebra (91).jpg\n/kaggle/input/animal-dataset/zebra/zebra (31).jpg\n/kaggle/input/animal-dataset/zebra/zebra (43).jpg\n/kaggle/input/animal-dataset/zebra/zebra (19).jpg\n/kaggle/input/animal-dataset/zebra/zebra (61).jpg\n/kaggle/input/animal-dataset/zebra/zebra (74).jpg\n/kaggle/input/animal-dataset/zebra/zebra (17).jpg\n/kaggle/input/animal-dataset/zebra/zebra (78).jpg\n/kaggle/input/animal-dataset/zebra/zebra (37).jpg\n/kaggle/input/animal-dataset/zebra/zebra (1).png\n/kaggle/input/animal-dataset/zebra/zebra (96).jpg\n/kaggle/input/animal-dataset/zebra/zebra (72).jpg\n/kaggle/input/animal-dataset/zebra/zebra (6).jpg\n/kaggle/input/animal-dataset/zebra/zebra (97).jpg\n/kaggle/input/animal-dataset/zebra/zebra (13).jpg\n/kaggle/input/animal-dataset/zebra/zebra (8).jpg\n/kaggle/input/animal-dataset/zebra/zebra (100).jpg\n/kaggle/input/animal-dataset/zebra/zebra (80).jpg\n/kaggle/input/animal-dataset/zebra/zebra (2).jpg\n/kaggle/input/animal-dataset/zebra/zebra (1).jpg\n/kaggle/input/animal-dataset/zebra/zebra (101).jpg\n/kaggle/input/animal-dataset/zebra/zebra (51).jpg\n/kaggle/input/animal-dataset/zebra/zebra (88).jpg\n/kaggle/input/animal-dataset/zebra/zebra (9).jpg\n/kaggle/input/animal-dataset/zebra/zebra (38).jpg\n/kaggle/input/animal-dataset/zebra/zebra (98).jpg\n/kaggle/input/animal-dataset/zebra/zebra (46).jpg\n/kaggle/input/animal-dataset/zebra/zebra (36).jpg\n/kaggle/input/animal-dataset/zebra/zebra (5).jpeg\n/kaggle/input/animal-dataset/zebra/zebra (40).jpg\n/kaggle/input/animal-dataset/zebra/zebra (11).jpg\n/kaggle/input/animal-dataset/zebra/zebra (94).jpg\n/kaggle/input/animal-dataset/zebra/zebra (77).jpg\n/kaggle/input/animal-dataset/zebra/zebra (95).jpg\n/kaggle/input/animal-dataset/zebra/zebra (83).jpg\n/kaggle/input/animal-dataset/zebra/zebra (20).jpg\n/kaggle/input/animal-dataset/zebra/zebra (93).jpg\n/kaggle/input/animal-dataset/zebra/zebra (65).jpg\n/kaggle/input/animal-dataset/zebra/zebra (60).jpg\n/kaggle/input/animal-dataset/zebra/zebra (5).jpg\n/kaggle/input/animal-dataset/zebra/zebra (49).jpg\n/kaggle/input/animal-dataset/zebra/zebra (92).jpg\n/kaggle/input/animal-dataset/zebra/zebra (76).jpg\n/kaggle/input/animal-dataset/zebra/zebra (47).jpg\n/kaggle/input/animal-dataset/zebra/zebra (81).jpg\n/kaggle/input/animal-dataset/zebra/zebra (53).jpg\n/kaggle/input/animal-dataset/zebra/zebra (16).jpg\n/kaggle/input/animal-dataset/zebra/zebra (4).jpg\n/kaggle/input/animal-dataset/zebra/zebra (71).jpg\n/kaggle/input/animal-dataset/zebra/zebra (89).jpg\n/kaggle/input/animal-dataset/zebra/zebra (64).jpg\n/kaggle/input/animal-dataset/zebra/zebra (58).jpg\n/kaggle/input/animal-dataset/zebra/zebra (10).jpg\n/kaggle/input/animal-dataset/zebra/zebra (18).jpg\n/kaggle/input/animal-dataset/zebra/zebra (59).jpg\n/kaggle/input/animal-dataset/zebra/zebra (33).jpg\n/kaggle/input/animal-dataset/zebra/zebra (57).jpg\n/kaggle/input/animal-dataset/zebra/zebra (21).jpg\n/kaggle/input/animal-dataset/zebra/zebra (90).jpg\n/kaggle/input/animal-dataset/zebra/zebra (30).jpg\n/kaggle/input/animal-dataset/zebra/zebra (25).jpg\n/kaggle/input/animal-dataset/zebra/zebra (34).jpg\n/kaggle/input/animal-dataset/zebra/zebra (26).jpg\n/kaggle/input/animal-dataset/zebra/zebra (48).jpg\n/kaggle/input/animal-dataset/zebra/zebra (73).jpg\n/kaggle/input/animal-dataset/zebra/zebra (85).jpg\n/kaggle/input/animal-dataset/zebra/zebra (67).jpg\n/kaggle/input/animal-dataset/zebra/zebra (35).jpg\n/kaggle/input/animal-dataset/zebra/zebra (23).jpg\n/kaggle/input/animal-dataset/zebra/zebra (42).jpg\n/kaggle/input/animal-dataset/zebra/zebra (70).jpg\n/kaggle/input/animal-dataset/zebra/zebra (68).jpg\n/kaggle/input/animal-dataset/zebra/zebra (29).jpg\n/kaggle/input/animal-dataset/zebra/zebra (99).jpg\n/kaggle/input/animal-dataset/zebra/zebra (44).jpg\n/kaggle/input/animal-dataset/cow/Cow  (61).jpg\n/kaggle/input/animal-dataset/cow/Cow  (59).jpg\n/kaggle/input/animal-dataset/cow/Cow  (52).jpg\n/kaggle/input/animal-dataset/cow/Cow  (66).jpg\n/kaggle/input/animal-dataset/cow/Cow  (30).jpg\n/kaggle/input/animal-dataset/cow/Cow  (53).jpg\n/kaggle/input/animal-dataset/cow/Cow  (1).jpg\n/kaggle/input/animal-dataset/cow/Cow  (72).jpg\n/kaggle/input/animal-dataset/cow/Cow  (26).jpg\n/kaggle/input/animal-dataset/cow/Cow  (65).jpg\n/kaggle/input/animal-dataset/cow/Cow  (82).jpg\n/kaggle/input/animal-dataset/cow/Cow  (7).jpg\n/kaggle/input/animal-dataset/cow/Cow  (20).jpg\n/kaggle/input/animal-dataset/cow/Cow  (22).jpg\n/kaggle/input/animal-dataset/cow/Cow  (37).jpg\n/kaggle/input/animal-dataset/cow/Cow  (11).jpg\n/kaggle/input/animal-dataset/cow/Cow  (93).jpg\n/kaggle/input/animal-dataset/cow/Cow  (14).jpg\n/kaggle/input/animal-dataset/cow/Cow  (6).jpg\n/kaggle/input/animal-dataset/cow/Cow  (88).jpg\n/kaggle/input/animal-dataset/cow/Cow  (27).jpg\n/kaggle/input/animal-dataset/cow/Cow  (24).jpg\n/kaggle/input/animal-dataset/cow/Cow  (46).jpg\n/kaggle/input/animal-dataset/cow/Cow  (74).jpg\n/kaggle/input/animal-dataset/cow/Cow  (39).jpg\n/kaggle/input/animal-dataset/cow/Cow  (31).jpg\n/kaggle/input/animal-dataset/cow/Cow  (69).jpg\n/kaggle/input/animal-dataset/cow/Cow  (68).jpg\n/kaggle/input/animal-dataset/cow/Cow  (76).jpg\n/kaggle/input/animal-dataset/cow/Cow  (77).jpg\n/kaggle/input/animal-dataset/cow/Cow  (89).jpg\n/kaggle/input/animal-dataset/cow/Cow  (23).jpg\n/kaggle/input/animal-dataset/cow/Cow  (16).jpg\n/kaggle/input/animal-dataset/cow/Cow  (32).jpg\n/kaggle/input/animal-dataset/cow/Cow  (38).jpg\n/kaggle/input/animal-dataset/cow/Cow  (15).jpg\n/kaggle/input/animal-dataset/cow/Cow  (1).jpeg\n/kaggle/input/animal-dataset/cow/Cow  (85).jpg\n/kaggle/input/animal-dataset/cow/Cow  (58).jpg\n/kaggle/input/animal-dataset/cow/Cow  (91).jpg\n/kaggle/input/animal-dataset/cow/Cow  (49).jpg\n/kaggle/input/animal-dataset/cow/Cow  (47).jpg\n/kaggle/input/animal-dataset/cow/Cow  (98).jpg\n/kaggle/input/animal-dataset/cow/Cow  (73).jpg\n/kaggle/input/animal-dataset/cow/Cow  (19).jpg\n/kaggle/input/animal-dataset/cow/Cow  (45).jpg\n/kaggle/input/animal-dataset/cow/Cow  (3).jpg\n/kaggle/input/animal-dataset/cow/Cow  (96).jpg\n/kaggle/input/animal-dataset/cow/Cow  (2).jpg\n/kaggle/input/animal-dataset/cow/Cow  (43).jpg\n/kaggle/input/animal-dataset/cow/Cow  (92).jpg\n/kaggle/input/animal-dataset/cow/Cow  (12).jpg\n/kaggle/input/animal-dataset/cow/Cow  (8).jpg\n/kaggle/input/animal-dataset/cow/Cow  (81).jpg\n/kaggle/input/animal-dataset/cow/Cow  (4).jpg\n/kaggle/input/animal-dataset/cow/Cow  (35).jpg\n/kaggle/input/animal-dataset/cow/Cow  (60).jpg\n/kaggle/input/animal-dataset/cow/Cow  (50).jpg\n/kaggle/input/animal-dataset/cow/Cow  (64).jpg\n/kaggle/input/animal-dataset/cow/Cow  (67).jpg\n/kaggle/input/animal-dataset/cow/Cow  (42).jpg\n/kaggle/input/animal-dataset/cow/Cow  (51).jpg\n/kaggle/input/animal-dataset/cow/Cow  (33).jpg\n/kaggle/input/animal-dataset/cow/Cow  (79).jpg\n/kaggle/input/animal-dataset/cow/Cow  (21).jpg\n/kaggle/input/animal-dataset/cow/Cow  (90).jpg\n/kaggle/input/animal-dataset/cow/Cow  (97).jpg\n/kaggle/input/animal-dataset/cow/Cow  (17).jpg\n/kaggle/input/animal-dataset/cow/Cow  (94).jpg\n/kaggle/input/animal-dataset/cow/Cow  (2).jpeg\n/kaggle/input/animal-dataset/cow/Cow  (83).jpg\n/kaggle/input/animal-dataset/cow/Cow  (44).jpg\n/kaggle/input/animal-dataset/cow/Cow  (9).jpg\n/kaggle/input/animal-dataset/cow/Cow  (71).jpg\n/kaggle/input/animal-dataset/cow/Cow  (36).jpg\n/kaggle/input/animal-dataset/cow/Cow  (75).jpg\n/kaggle/input/animal-dataset/cow/Cow  (18).jpg\n/kaggle/input/animal-dataset/cow/Cow  (55).jpg\n/kaggle/input/animal-dataset/cow/Cow  (5).jpg\n/kaggle/input/animal-dataset/cow/Cow  (57).jpg\n/kaggle/input/animal-dataset/cow/Cow  (40).jpg\n/kaggle/input/animal-dataset/cow/Cow  (86).jpg\n/kaggle/input/animal-dataset/cow/Cow  (63).jpg\n/kaggle/input/animal-dataset/cow/Cow  (3).jpeg\n/kaggle/input/animal-dataset/cow/Cow  (10).jpg\n/kaggle/input/animal-dataset/cow/Cow  (62).jpg\n/kaggle/input/animal-dataset/cow/Cow  (78).jpg\n/kaggle/input/animal-dataset/cow/Cow  (29).jpg\n/kaggle/input/animal-dataset/cow/Cow  (41).jpg\n/kaggle/input/animal-dataset/cow/Cow  (80).jpg\n/kaggle/input/animal-dataset/cow/Cow  (25).jpg\n/kaggle/input/animal-dataset/cow/Cow  (28).jpg\n/kaggle/input/animal-dataset/cow/Cow  (56).jpg\n/kaggle/input/animal-dataset/cow/Cow  (48).jpg\n/kaggle/input/animal-dataset/cow/Cow  (13).jpg\n/kaggle/input/animal-dataset/cow/Cow  (34).jpg\n/kaggle/input/animal-dataset/cow/Cow  (84).jpg\n/kaggle/input/animal-dataset/cow/Cow  (70).jpg\n/kaggle/input/animal-dataset/cow/Cow  (87).jpg\n/kaggle/input/animal-dataset/cow/Cow  (54).jpg\n/kaggle/input/animal-dataset/cow/Cow  (95).jpg\n/kaggle/input/animal-dataset/cat/Cat  (77).jpg\n/kaggle/input/animal-dataset/cat/Cat  (44).jpg\n/kaggle/input/animal-dataset/cat/Cat  (15).jpg\n/kaggle/input/animal-dataset/cat/Cat  (66).jpg\n/kaggle/input/animal-dataset/cat/Cat  (80).jpg\n/kaggle/input/animal-dataset/cat/Cat  (90).jpg\n/kaggle/input/animal-dataset/cat/Cat  (7).jpg\n/kaggle/input/animal-dataset/cat/Cat  (78).jpg\n/kaggle/input/animal-dataset/cat/Cat  (41).jpg\n/kaggle/input/animal-dataset/cat/Cat  (69).jpg\n/kaggle/input/animal-dataset/cat/Cat  (46).jpg\n/kaggle/input/animal-dataset/cat/Cat  (81).jpg\n/kaggle/input/animal-dataset/cat/Cat  (36).jpg\n/kaggle/input/animal-dataset/cat/Cat  (54).jpg\n/kaggle/input/animal-dataset/cat/Cat  (86).jpg\n/kaggle/input/animal-dataset/cat/Cat  (72).jpg\n/kaggle/input/animal-dataset/cat/Cat  (12).jpg\n/kaggle/input/animal-dataset/cat/Cat  (6).jpg\n/kaggle/input/animal-dataset/cat/Cat  (79).jpg\n/kaggle/input/animal-dataset/cat/Cat  (74).jpg\n/kaggle/input/animal-dataset/cat/Cat  (18).jpg\n/kaggle/input/animal-dataset/cat/Cat  (2).jpeg\n/kaggle/input/animal-dataset/cat/Cat  (105).jpg\n/kaggle/input/animal-dataset/cat/Cat  (102).jpg\n/kaggle/input/animal-dataset/cat/Cat  (52).jpg\n/kaggle/input/animal-dataset/cat/Cat  (84).jpg\n/kaggle/input/animal-dataset/cat/Cat  (29).jpg\n/kaggle/input/animal-dataset/cat/Cat  (103).jpg\n/kaggle/input/animal-dataset/cat/Cat  (20).jpg\n/kaggle/input/animal-dataset/cat/Cat  (76).jpg\n/kaggle/input/animal-dataset/cat/Cat  (50).jpg\n/kaggle/input/animal-dataset/cat/Cat  (40).jpg\n/kaggle/input/animal-dataset/cat/Cat  (34).jpg\n/kaggle/input/animal-dataset/cat/Cat  (3).jpeg\n/kaggle/input/animal-dataset/cat/Cat  (87).jpg\n/kaggle/input/animal-dataset/cat/Cat  (25).jpg\n/kaggle/input/animal-dataset/cat/Cat  (24).jpg\n/kaggle/input/animal-dataset/cat/Cat  (71).jpg\n/kaggle/input/animal-dataset/cat/Cat  (51).jpg\n/kaggle/input/animal-dataset/cat/Cat  (75).jpg\n/kaggle/input/animal-dataset/cat/Cat  (56).jpg\n/kaggle/input/animal-dataset/cat/Cat  (22).jpg\n/kaggle/input/animal-dataset/cat/Cat  (27).jpg\n/kaggle/input/animal-dataset/cat/Cat  (16).jpg\n/kaggle/input/animal-dataset/cat/Cat  (21).jpg\n/kaggle/input/animal-dataset/cat/Cat  (101).jpg\n/kaggle/input/animal-dataset/cat/Cat  (37).jpg\n/kaggle/input/animal-dataset/cat/Cat  (5).jpg\n/kaggle/input/animal-dataset/cat/Cat  (38).jpg\n/kaggle/input/animal-dataset/cat/Cat  (26).jpg\n/kaggle/input/animal-dataset/cat/Cat  (88).jpg\n/kaggle/input/animal-dataset/cat/Cat  (53).jpg\n/kaggle/input/animal-dataset/cat/Cat  (33).jpg\n/kaggle/input/animal-dataset/cat/Cat  (82).jpg\n/kaggle/input/animal-dataset/cat/Cat  (60).jpg\n/kaggle/input/animal-dataset/cat/Cat  (65).jpg\n/kaggle/input/animal-dataset/cat/Cat  (58).jpg\n/kaggle/input/animal-dataset/cat/Cat  (13).jpg\n/kaggle/input/animal-dataset/cat/Cat  (14).jpg\n/kaggle/input/animal-dataset/cat/Cat  (9).jpg\n/kaggle/input/animal-dataset/cat/Cat  (59).jpg\n/kaggle/input/animal-dataset/cat/Cat  (57).jpg\n/kaggle/input/animal-dataset/cat/Cat  (68).jpg\n/kaggle/input/animal-dataset/cat/Cat  (93).jpg\n/kaggle/input/animal-dataset/cat/Cat  (63).jpg\n/kaggle/input/animal-dataset/cat/Cat  (30).jpg\n/kaggle/input/animal-dataset/cat/Cat  (28).jpg\n/kaggle/input/animal-dataset/cat/Cat  (23).jpg\n/kaggle/input/animal-dataset/cat/Cat  (32).jpg\n/kaggle/input/animal-dataset/cat/Cat  (47).jpg\n/kaggle/input/animal-dataset/cat/Cat  (48).jpg\n/kaggle/input/animal-dataset/cat/Cat  (3).jpg\n/kaggle/input/animal-dataset/cat/Cat  (49).jpg\n/kaggle/input/animal-dataset/cat/Cat  (61).jpg\n/kaggle/input/animal-dataset/cat/Cat  (31).jpg\n/kaggle/input/animal-dataset/cat/Cat  (17).jpg\n/kaggle/input/animal-dataset/cat/Cat  (2).jpg\n/kaggle/input/animal-dataset/cat/Cat  (6).jpeg\n/kaggle/input/animal-dataset/cat/Cat  (73).jpg\n/kaggle/input/animal-dataset/cat/Cat  (98).jpg\n/kaggle/input/animal-dataset/cat/Cat  (94).jpg\n/kaggle/input/animal-dataset/cat/Cat  (45).jpg\n/kaggle/input/animal-dataset/cat/Cat  (5).jpeg\n/kaggle/input/animal-dataset/cat/Cat  (4).jpg\n/kaggle/input/animal-dataset/cat/Cat  (62).jpg\n/kaggle/input/animal-dataset/cat/Cat  (97).jpg\n/kaggle/input/animal-dataset/cat/Cat  (67).jpg\n/kaggle/input/animal-dataset/cat/Cat  (83).jpg\n/kaggle/input/animal-dataset/cat/Cat  (64).jpg\n/kaggle/input/animal-dataset/cat/Cat  (70).jpg\n/kaggle/input/animal-dataset/cat/Cat  (1).jpg\n/kaggle/input/animal-dataset/cat/Cat  (42).jpg\n/kaggle/input/animal-dataset/cat/Cat  (104).jpg\n/kaggle/input/animal-dataset/cat/Cat  (19).jpg\n/kaggle/input/animal-dataset/cat/Cat  (11).jpg\n/kaggle/input/animal-dataset/cat/Cat  (55).jpg\n/kaggle/input/animal-dataset/cat/Cat  (85).jpg\n/kaggle/input/animal-dataset/cat/Cat  (92).jpg\n/kaggle/input/animal-dataset/cat/Cat  (8).jpg\n/kaggle/input/animal-dataset/cat/Cat  (95).jpg\n/kaggle/input/animal-dataset/cat/Cat  (1).jpeg\n/kaggle/input/animal-dataset/cat/Cat  (43).jpg\n/kaggle/input/animal-dataset/cat/Cat  (100).jpg\n/kaggle/input/animal-dataset/cat/Cat  (39).jpg\n/kaggle/input/animal-dataset/cat/Cat  (10).jpg\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"import os\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, accuracy_score\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras import Input\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-23T19:58:37.704350Z","iopub.execute_input":"2025-06-23T19:58:37.704559Z","iopub.status.idle":"2025-06-23T19:58:37.710422Z","shell.execute_reply.started":"2025-06-23T19:58:37.704543Z","shell.execute_reply":"2025-06-23T19:58:37.709807Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"# Define dataset path\ndata_path = \"/kaggle/input/animal-dataset\"  # Change this if needed\n\n# Preprocess images using ImageDataGenerator\nimg_size = 128\nbatch_size = 32\n\ndatagen = ImageDataGenerator(\n    rescale=1./255,\n    rotation_range=20,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True,\n    validation_split=0.2\n)\n\ntrain_data = datagen.flow_from_directory(\n    data_path,\n    target_size=(img_size, img_size),\n    batch_size=batch_size,\n    class_mode='categorical',\n    subset='training'\n)\n\nval_data = datagen.flow_from_directory(\n    data_path,\n    target_size=(img_size, img_size),\n    batch_size=batch_size,\n    class_mode='categorical',\n    subset='validation'\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-23T19:58:37.711180Z","iopub.execute_input":"2025-06-23T19:58:37.711425Z","iopub.status.idle":"2025-06-23T19:58:37.753381Z","shell.execute_reply.started":"2025-06-23T19:58:37.711403Z","shell.execute_reply":"2025-06-23T19:58:37.752923Z"}},"outputs":[{"name":"stdout","text":"Found 422 images belonging to 5 classes.\nFound 104 images belonging to 5 classes.\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"from tensorflow.keras import Input\n\nmodel = Sequential([\n    Input(shape=(img_size, img_size, 3)), # 👈 \n    Conv2D(32, (3, 3), activation='relu'),\n    MaxPooling2D(2, 2),\n    \n    Conv2D(64, (3, 3), activation='relu'),\n    MaxPooling2D(2, 2),\n    \n    Flatten(),\n    Dense(128, activation='relu'),\n    Dropout(0.3),\n    Dense(5, activation='softmax')  # 5 classes\n])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-23T19:58:37.754015Z","iopub.execute_input":"2025-06-23T19:58:37.754190Z","iopub.status.idle":"2025-06-23T19:58:40.268289Z","shell.execute_reply.started":"2025-06-23T19:58:37.754176Z","shell.execute_reply":"2025-06-23T19:58:40.267497Z"}},"outputs":[{"name":"stderr","text":"I0000 00:00:1750708718.990530      35 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13942 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5\nI0000 00:00:1750708718.991221      35 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 13942 MB memory:  -> device: 1, name: Tesla T4, pci bus id: 0000:00:05.0, compute capability: 7.5\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"model.compile(\n    optimizer='adam',\n    loss='categorical_crossentropy',\n    metrics=['accuracy']\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-23T20:01:40.388265Z","iopub.execute_input":"2025-06-23T20:01:40.388801Z","iopub.status.idle":"2025-06-23T20:01:40.397600Z","shell.execute_reply.started":"2025-06-23T20:01:40.388775Z","shell.execute_reply":"2025-06-23T20:01:40.396891Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"history = model.fit(\n    train_data,\n    validation_data=val_data,\n    epochs=20\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-23T20:01:45.859099Z","iopub.execute_input":"2025-06-23T20:01:45.859583Z","iopub.status.idle":"2025-06-23T20:06:28.364977Z","shell.execute_reply.started":"2025-06-23T20:01:45.859562Z","shell.execute_reply":"2025-06-23T20:06:28.364199Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n  self._warn_if_super_not_called()\n","output_type":"stream"},{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1750708913.093937     115 service.cc:148] XLA service 0x79e4ec004c50 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1750708913.094793     115 service.cc:156]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\nI0000 00:00:1750708913.094815     115 service.cc:156]   StreamExecutor device (1): Tesla T4, Compute Capability 7.5\nI0000 00:00:1750708913.415127     115 cuda_dnn.cc:529] Loaded cuDNN version 90300\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m 1/14\u001b[0m \u001b[32m━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m1:32\u001b[0m 7s/step - accuracy: 0.3438 - loss: 1.5685","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1750708916.541057     115 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m40s\u001b[0m 3s/step - accuracy: 0.2708 - loss: 3.9613 - val_accuracy: 0.2596 - val_loss: 1.5463\nEpoch 2/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2s/step - accuracy: 0.3899 - loss: 1.3909 - val_accuracy: 0.5769 - val_loss: 1.1830\nEpoch 3/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2s/step - accuracy: 0.6714 - loss: 0.9489 - val_accuracy: 0.5769 - val_loss: 1.0228\nEpoch 4/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 2s/step - accuracy: 0.7626 - loss: 0.6146 - val_accuracy: 0.6058 - val_loss: 0.9309\nEpoch 5/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2s/step - accuracy: 0.8698 - loss: 0.4372 - val_accuracy: 0.6635 - val_loss: 0.9416\nEpoch 6/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 2s/step - accuracy: 0.8952 - loss: 0.2849 - val_accuracy: 0.6346 - val_loss: 1.0142\nEpoch 7/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2s/step - accuracy: 0.9337 - loss: 0.2180 - val_accuracy: 0.5577 - val_loss: 1.1956\nEpoch 8/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 2s/step - accuracy: 0.9476 - loss: 0.1734 - val_accuracy: 0.6154 - val_loss: 1.3207\nEpoch 9/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 2s/step - accuracy: 0.9425 - loss: 0.1881 - val_accuracy: 0.6346 - val_loss: 1.4242\nEpoch 10/10\n\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 2s/step - accuracy: 0.9702 - loss: 0.0839 - val_accuracy: 0.6058 - val_loss: 1.2985\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\nplt.plot(history.history['accuracy'], label='Train Accuracy')\nplt.plot(history.history['val_accuracy'], label='Validation Accuracy')\nplt.title('Model Accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()\n\nval_loss, val_acc = model.evaluate(val_data)\nprint(f\"✅ Final Validation Accuracy: {val_acc * 100:.2f}%\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-23T20:07:39.447378Z","iopub.execute_input":"2025-06-23T20:07:39.448072Z","iopub.status.idle":"2025-06-23T20:07:52.085983Z","shell.execute_reply.started":"2025-06-23T20:07:39.448045Z","shell.execute_reply":"2025-06-23T20:07:52.085379Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 2s/step - accuracy: 0.6058 - loss: 1.2886\n✅ Final Validation Accuracy: 60.58%\n","output_type":"stream"}],"execution_count":11}]}